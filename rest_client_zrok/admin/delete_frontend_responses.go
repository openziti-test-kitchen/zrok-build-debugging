// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteFrontendReader is a Reader for the DeleteFrontend structure.
type DeleteFrontendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFrontendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFrontendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteFrontendUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteFrontendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteFrontendInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /frontend] deleteFrontend", response, response.Code())
	}
}

// NewDeleteFrontendOK creates a DeleteFrontendOK with default headers values
func NewDeleteFrontendOK() *DeleteFrontendOK {
	return &DeleteFrontendOK{}
}

/*
DeleteFrontendOK describes a response with status code 200, with default header values.

frontend deleted
*/
type DeleteFrontendOK struct {
}

// IsSuccess returns true when this delete frontend o k response has a 2xx status code
func (o *DeleteFrontendOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete frontend o k response has a 3xx status code
func (o *DeleteFrontendOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete frontend o k response has a 4xx status code
func (o *DeleteFrontendOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete frontend o k response has a 5xx status code
func (o *DeleteFrontendOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete frontend o k response a status code equal to that given
func (o *DeleteFrontendOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete frontend o k response
func (o *DeleteFrontendOK) Code() int {
	return 200
}

func (o *DeleteFrontendOK) Error() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendOK ", 200)
}

func (o *DeleteFrontendOK) String() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendOK ", 200)
}

func (o *DeleteFrontendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFrontendUnauthorized creates a DeleteFrontendUnauthorized with default headers values
func NewDeleteFrontendUnauthorized() *DeleteFrontendUnauthorized {
	return &DeleteFrontendUnauthorized{}
}

/*
DeleteFrontendUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DeleteFrontendUnauthorized struct {
}

// IsSuccess returns true when this delete frontend unauthorized response has a 2xx status code
func (o *DeleteFrontendUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete frontend unauthorized response has a 3xx status code
func (o *DeleteFrontendUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete frontend unauthorized response has a 4xx status code
func (o *DeleteFrontendUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete frontend unauthorized response has a 5xx status code
func (o *DeleteFrontendUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete frontend unauthorized response a status code equal to that given
func (o *DeleteFrontendUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete frontend unauthorized response
func (o *DeleteFrontendUnauthorized) Code() int {
	return 401
}

func (o *DeleteFrontendUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendUnauthorized ", 401)
}

func (o *DeleteFrontendUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendUnauthorized ", 401)
}

func (o *DeleteFrontendUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFrontendNotFound creates a DeleteFrontendNotFound with default headers values
func NewDeleteFrontendNotFound() *DeleteFrontendNotFound {
	return &DeleteFrontendNotFound{}
}

/*
DeleteFrontendNotFound describes a response with status code 404, with default header values.

not found
*/
type DeleteFrontendNotFound struct {
}

// IsSuccess returns true when this delete frontend not found response has a 2xx status code
func (o *DeleteFrontendNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete frontend not found response has a 3xx status code
func (o *DeleteFrontendNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete frontend not found response has a 4xx status code
func (o *DeleteFrontendNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete frontend not found response has a 5xx status code
func (o *DeleteFrontendNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete frontend not found response a status code equal to that given
func (o *DeleteFrontendNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete frontend not found response
func (o *DeleteFrontendNotFound) Code() int {
	return 404
}

func (o *DeleteFrontendNotFound) Error() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendNotFound ", 404)
}

func (o *DeleteFrontendNotFound) String() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendNotFound ", 404)
}

func (o *DeleteFrontendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFrontendInternalServerError creates a DeleteFrontendInternalServerError with default headers values
func NewDeleteFrontendInternalServerError() *DeleteFrontendInternalServerError {
	return &DeleteFrontendInternalServerError{}
}

/*
DeleteFrontendInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DeleteFrontendInternalServerError struct {
}

// IsSuccess returns true when this delete frontend internal server error response has a 2xx status code
func (o *DeleteFrontendInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete frontend internal server error response has a 3xx status code
func (o *DeleteFrontendInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete frontend internal server error response has a 4xx status code
func (o *DeleteFrontendInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete frontend internal server error response has a 5xx status code
func (o *DeleteFrontendInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete frontend internal server error response a status code equal to that given
func (o *DeleteFrontendInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete frontend internal server error response
func (o *DeleteFrontendInternalServerError) Code() int {
	return 500
}

func (o *DeleteFrontendInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendInternalServerError ", 500)
}

func (o *DeleteFrontendInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /frontend][%d] deleteFrontendInternalServerError ", 500)
}

func (o *DeleteFrontendInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
DeleteFrontendBody delete frontend body
swagger:model DeleteFrontendBody
*/
type DeleteFrontendBody struct {

	// frontend token
	FrontendToken string `json:"frontendToken,omitempty"`
}

// Validate validates this delete frontend body
func (o *DeleteFrontendBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete frontend body based on context it is used
func (o *DeleteFrontendBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteFrontendBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteFrontendBody) UnmarshalBinary(b []byte) error {
	var res DeleteFrontendBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
